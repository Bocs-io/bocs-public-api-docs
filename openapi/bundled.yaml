openapi: 3.0.0
info:
  version: 1.0.0
  title: Bocs API
  termsOfService: https://api.bocs.io/terms/
  contact:
    email: contact@bocs.io
    url: https://bocs.io/contact
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: https://git.bocs.io/bocs.png
  description: |
    This is an **example** API to demonstrate features of the OpenAPI specification.

    # Introduction

    This API definition is intended to to be a good starting point for
    describing your API in 

    [OpenAPI/Swagger
    format](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md).

    It also demonstrates features of the
    [create-openapi-repo](https://github.com/Redocly/create-openapi-repo) tool
    and 

    the [Redoc](https://github.com/Redocly/Redoc) documentation engine. Beyond
    the standard OpenAPI syntax, we use a few 

    [vendor
    extensions](https://github.com/Redocly/Redoc/blob/master/docs/redoc-vendor-extensions.md).


    # OpenAPI Specification

    The goal of The OpenAPI Specification is to define a standard,
    language-agnostic interface to REST APIs which

    allows both humans and computers to discover and understand the capabilities
    of the service without access to source

    code, documentation, or through network traffic inspection. When properly
    defined via OpenAPI, a consumer can 

    understand and interact with the remote service with a minimal amount of
    implementation logic. Similar to what

    interfaces have done for lower-level programming, OpenAPI removes the
    guesswork in calling the service.
x-tagGroups:
  - name: People
    tags:
      - Contacts
      - Subscribers
      - Address
  - name: Bocs
    tags:
      - Collections
      - Bocs
  - name: Products
    tags:
      - Products
      - Categories
      - Tags
  - name: Sales
    tags:
      - Orders
      - Subscriptions
  - name: Shipping & Tax
    tags:
      - Shipping Zones
      - Tax Rates
  - name: Widgets
    tags:
      - Widgets
paths:
  /contacts:
    get:
      operationId: ListContacts
      summary: List Contacts
      description: Returns a list of contacts
      tags:
        - Contacts
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/contacts' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostContact
      summary: Create Contact
      description: Creates a contact
      tags:
        - Contacts
      security:
        - api_key: []
      requestBody:
        description: Contact Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactsPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/contacts' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /contacts/{id}:
    get:
      operationId: GetContact
      summary: Get Contact
      description: Returns a contact
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the contact
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/contacts/<contact ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutContact
      summary: Update Contact
      description: Updates a contact
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the contact
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/contacts/<contact ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Contact Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactsPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteContact
      summary: Delete Contact
      description: Deletes a contact
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the contact
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/contacts/<contact ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactsDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /subscribers:
    get:
      operationId: ListSubscribers
      summary: List Subscribers
      description: List of subscribers
      tags:
        - Subscribers
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscribers' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribersListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostSubscriber
      summary: Create Subscriber
      description: Creates a subscriber
      tags:
        - Subscribers
      security:
        - api_key: []
      requestBody:
        description: Subscriber Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribersPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscribers' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribersPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /subscribers/{id}:
    get:
      operationId: GetSubscriber
      summary: Get Subscriber
      description: Returns a subscriber
      tags:
        - Subscribers
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the subscriber
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscribers/<subscriber ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribersGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutSubscriber
      summary: Update Subscriber
      description: Updates a subscriber
      tags:
        - Subscribers
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the subscriber
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscribers/<subscriber ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Subscriber Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscribersPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribersPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteSubscriber
      summary: Delete Subscriber
      description: Deletes a subscriber
      tags:
        - Subscribers
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the subscriber
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscribers/<subscriber ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribersDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /address:
    get:
      operationId: ListAddress
      summary: List Address
      description: List of address
      tags:
        - Address
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/address' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostAddress
      summary: Create Address
      description: Creates a address
      tags:
        - Address
      security:
        - api_key: []
      requestBody:
        description: Address Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/address' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /address/{id}:
    get:
      operationId: GetAddress
      summary: Get Address
      description: Returns a address
      tags:
        - Address
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the address
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/address/<address ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutAddress
      summary: Update Address
      description: Updates a address
      tags:
        - Address
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the address
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/address/<address ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Address Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteAddress
      summary: Delete Address
      description: Deletes a address
      tags:
        - Address
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the address
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/address/<address ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddressDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /collections:
    get:
      operationId: ListCollections
      summary: List Collections
      description: List of collections
      tags:
        - Collections
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/collections' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostCollection
      summary: Create Collection
      description: Creates a collection
      tags:
        - Collections
      security:
        - api_key: []
      requestBody:
        description: Collection Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/collections' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /collections/{id}:
    get:
      operationId: GetCollection
      summary: Get Collection
      description: Returns a collection
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the collection
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/collections/<collection ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutCollection
      summary: Update Collection
      description: Updates a collection
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the collection
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/collections/<collection ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Collection Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionsPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteCollection
      summary: Delete Collection
      description: Deletes a collection
      tags:
        - Collections
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the collection
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/collections/<collection ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /bocs:
    get:
      operationId: ListBocs
      summary: List Bocs
      description: List of bocs
      tags:
        - Bocs
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/bocs' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BocsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostBocs
      summary: Create Bocs
      description: Creates a bocs
      tags:
        - Bocs
      security:
        - api_key: []
      requestBody:
        description: Bocs Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BocsPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/bocs' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BocsPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /bocs/{id}:
    get:
      operationId: GetBocs
      summary: Get Bocs
      description: Returns a bocs
      tags:
        - Bocs
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the bocs
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/bocs/<bocs ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BocsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutBocs
      summary: Update Bocs
      description: Updates a bocs
      tags:
        - Bocs
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the bocs
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/bocs/<bocs ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Bocs Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BocsPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BocsPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteBocs
      summary: Delete Bocs
      description: Deletes a bocs
      tags:
        - Bocs
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the bocs
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/bocs/<bocs ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BocsDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /products:
    get:
      operationId: ListProducts
      summary: List Products
      description: List of products
      tags:
        - Products
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/products' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostProduct
      summary: Create Product
      description: Creates a product
      tags:
        - Products
      security:
        - api_key: []
      requestBody:
        description: Product Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/products' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /products/{id}:
    get:
      operationId: GetProduct
      summary: Get Product
      description: Returns a product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the product
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/products/<product ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutProduct
      summary: Update Product
      description: Updates a product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the product
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/products/<product ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Product Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductsPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteProduct
      summary: Delete Product
      description: Deletes a product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the product
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/products/<product ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductsDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /categories:
    get:
      operationId: ListCategories
      summary: List Categories
      description: List of categories
      tags:
        - Categories
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/categories' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostCategory
      summary: Create Category
      description: Creates a category
      tags:
        - Categories
      security:
        - api_key: []
      requestBody:
        description: Category Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/categories' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /categories/{id}:
    get:
      operationId: GetCategory
      summary: Get Category
      description: Returns a category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the category
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/categories/<category ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutCategory
      summary: Update Category
      description: Updates a category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the category
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/categories/<category ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Category Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoriesPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteCategory
      summary: Delete Category
      description: Deletes a category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the category
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/categories/<category ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /tags:
    get:
      operationId: ListTags
      summary: List Tags
      description: List of tags
      tags:
        - Tags
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tags' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostTag
      summary: Create Tag
      description: Creates a tag
      tags:
        - Tags
      security:
        - api_key: []
      requestBody:
        description: Tag Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tags' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /tags/{id}:
    get:
      operationId: GetTag
      summary: Get Tag
      description: Returns a tag
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the tag
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tags/<tag ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutTag
      summary: Update Tag
      description: Updates a tag
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the tag
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tags/<tag ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Tag Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteTag
      summary: Delete Tag
      description: Deletes a tag
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the tag
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tags/<tag ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /orders:
    get:
      operationId: ListOrders
      summary: List Orders
      description: List of orders
      tags:
        - Orders
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/orders' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostOrder
      summary: Create Order
      description: Creates an order
      tags:
        - Orders
      security:
        - api_key: []
      requestBody:
        description: Order Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/orders' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /orders/{id}:
    get:
      operationId: GetOrder
      summary: Get Order
      description: Returns an order
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the order
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/orders/<order ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutOrder
      summary: Update Order
      description: Updates an order
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the order
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/orders/<order ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Order Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrdersPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteOrder
      summary: Delete Order
      description: Deletes an order
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the order
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/orders/<order ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrdersDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /subscriptions:
    get:
      operationId: ListSubscriptions
      summary: List Subscriptions
      description: List of subscriptions
      tags:
        - Subscriptions
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscriptions' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostSubscription
      summary: Create Subscription
      description: Creates a subscription
      tags:
        - Subscriptions
      security:
        - api_key: []
      requestBody:
        description: Subscription Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionsPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscriptions' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /subscriptions/{id}:
    get:
      operationId: GetSubscription
      summary: Get Subscription
      description: Returns a subscription
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the subscription
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscriptions/<subscription ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutSubscription
      summary: Update Subscription
      description: Updates a subscription
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the subscription
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscriptions/<subscription ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Subscription Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionsPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteSubscription
      summary: Delete Subscription
      description: Deletes a subscription
      tags:
        - Subscriptions
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the subscription
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/subscriptions/<subscription ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /shipping-zones:
    get:
      operationId: ListShippingZones
      summary: List Shipping Zones
      description: List of shipping zones
      tags:
        - Shipping Zones
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/shipping-zones' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZonesListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostShippingZone
      summary: CreateShipping Zone
      description: Creates a shipping zone
      tags:
        - Shipping Zones
      security:
        - api_key: []
      requestBody:
        description: Shipping Zone Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingZonesPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/shipping-zones' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZonesPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /shipping-zones/{id}:
    get:
      operationId: GetShippingZone
      summary: Get Shipping Zone
      description: Returns a shipping zone
      tags:
        - Shipping Zones
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the shipping zone
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/shipping-zones/<shipping zone ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZonesGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutShippingZone
      summary: Update Shipping Zone
      description: Updates a shipping zone
      tags:
        - Shipping Zones
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the shipping zone
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/shipping-zones/<shipping zone ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Shipping Zone Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingZonesPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZonesPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteShippingZone
      summary: Delete Shipping Zone
      description: Deletes a shipping zone
      tags:
        - Shipping Zones
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the shipping zone
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/shipping-zones/<shipping zone ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShippingZonesDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /tax-rates:
    get:
      operationId: ListTaxRates
      summary: List Tax Rates
      description: List of tax rates
      tags:
        - Tax Rates
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tax-rates' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRatesListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      operationId: PostTaxRate
      summary: Create Tax Rate
      description: Creates a tax rate
      tags:
        - Tax Rates
      security:
        - api_key: []
      requestBody:
        description: Tax Rate Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRatesPostRequest'
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request POST \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tax-rates' \
            --data '{"email": "foo@example.com", "firstName": "Foo", "lastName": "Bar"}' \
            | jq
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRatesPostResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
  /tax-rates/{id}:
    get:
      operationId: GetTaxRate
      summary: Get Tax Rate
      description: Returns a tax rate
      tags:
        - Tax Rates
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the tax rate
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tax-rates/<subscription ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRatesGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      operationId: PutTaxRate
      summary: Update Tax Rate
      description: Updates a tax rate
      tags:
        - Tax Rates
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the tax rate
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request PUT \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tax-rates/<subscription ID>' \
            --data '{"lastName": "updated"}' \
            | jq
      requestBody:
        description: Tax Rate Fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxRatesPutRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRatesPutResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    delete:
      operationId: DeleteTaxRate
      summary: Delete Tax Rate
      description: Deletes a tax rate
      tags:
        - Tax Rates
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the tax rate
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request DELETE \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/tax-rates/<subscription ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxRatesDeleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /widgets:
    get:
      operationId: ListWidgets
      summary: List Widgets
      description: List of widgets
      tags:
        - Widgets
      security:
        - api_key: []
      parameters:
        - in: query
          name: query
          schema:
            type: string
            example: firstName:"bar"
          description: Filter returned rows
        - in: query
          name: pageToken
          schema:
            type: string
          description: The pagination page token
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/widgets' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetsListResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
  /widgets/{id}:
    get:
      operationId: GetWidget
      summary: Get Widget
      description: Returns a widget
      tags:
        - Widgets
      parameters:
        - name: id
          in: path
          schema:
            type: string
            example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
          required: true
          description: ID of the widget
      security:
        - api_key: []
      x-codeSamples:
        - label: CLI
          lang: cURL
          source: |
            curl --request GET \
            --header 'Authorization: <your API Key>' \
            --header 'Content-Type: application/json' \
            --url 'https://api.bocs.io/test/widgets/<widget ID>' | jq
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WidgetsGetResponse'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
components:
  securitySchemes:
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
  schemas:
    ContactsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
    ContactsPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    ContactsPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ContactsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ContactsPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    ContactsPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ContactsDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    SubscribersListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    SubscribersPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    SubscribersPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    SubscribersGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    SubscribersPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    SubscribersPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    SubscribersDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    AddressListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    AddressPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    AddressPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    AddressGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    AddressPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    AddressPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    AddressDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    CollectionsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    CollectionsPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    CollectionsPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    CollectionsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    CollectionsPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    CollectionsPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    CollectionsDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    BocsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    BocsPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    BocsPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    BocsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    BocsPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    BocsPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    BocsDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    ProductsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    ProductsPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    ProductsPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ProductsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ProductsPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    ProductsPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ProductsDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    CategoriesListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    CategoriesPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    CategoriesPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    CategoriesGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    CategoriesPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    CategoriesPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    CategoriesDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    TagsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    TagsPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    TagsPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    TagsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    TagsPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    TagsPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    TagsDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    OrdersListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              userId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              orderId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              isSubscription:
                type: boolean
                example: false
              total:
                type: number
                example: 100
              discount:
                type: number
                example: 3
              shippingRate:
                type: number
                example: 2
              currency:
                type: string
                example: AUD
              status:
                type: string
                example: active
              paymentDate:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              isPaid:
                type: boolean
                example: false
              platform:
                type: string
                example: woocommerce
              customer:
                type: object
                properties:
                  id:
                    type: string
                    example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
                  firstName:
                    type: string
                    example: Foo
                  lastName:
                    type: string
                    example: Bar
                  email:
                    type: string
                    example: foo@example.com
              refunds:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
                    reason:
                      type: string
                      example: Foo Bar
                    total:
                      type: number
                      example: 100
                    createdAt:
                      type: string
                      example: '2022-10-25T11:25:08.394Z'
                    updatedAt:
                      type: string
                      example: '2022-10-25T11:25:08.394Z'
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    OrdersPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    OrdersPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            total:
              type: string
            discount:
              type: number
            shippingRate:
              type: number
            currency:
              type: string
              example: Bar
            status:
              type: string
            paymentDate:
              type: string
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    OrdersGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    OrdersPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    OrdersPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    OrdersDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    SubscriptionsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    SubscriptionsPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    SubscriptionsPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    SubscriptionsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    SubscriptionsPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    SubscriptionsPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    SubscriptionsDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    ShippingZonesListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    ShippingZonesPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    ShippingZonesPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ShippingZonesGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ShippingZonesPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    ShippingZonesPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    ShippingZonesDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    TaxRatesListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    TaxRatesPostRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    TaxRatesPostResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    TaxRatesGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    TaxRatesPutRequest:
      type: object
      properties:
        email:
          type: string
          example: foo@bocs.io
        firstName:
          type: string
          example: Foo
        lastName:
          type: string
          example: Bar
    TaxRatesPutResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
    TaxRatesDeleteResponse:
      type: object
      properties:
        code:
          type: integer
          example: 201
        message:
          type: string
          example: success
    WidgetsListResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
              email:
                type: string
                example: foo@bocs.io
              firstName:
                type: string
                example: Foo
              lastName:
                type: string
                example: Bar
              createdAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
              updatedAt:
                type: string
                example: '2022-10-25T11:25:08.394Z'
        nextPageLink:
          type: string
          example: https://api.bocs.io/dev/contacts?pageToken=c70e668c
    WidgetsGetResponse:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            contactId:
              type: string
              example: 20f4d56d-2b58-430b-8d51-93d2b6a53d59
            email:
              type: string
              example: foo@bocs.io
            firstName:
              type: string
              example: Foo
            lastName:
              type: string
              example: Bar
            createdAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
            updatedAt:
              type: string
              example: '2022-10-25T11:25:08.394Z'
  responses:
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Field is required
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Unauthorized
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    '404':
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: Internal server error
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/MyPik-App/bocs/1.0.0
  - description: Test server
    url: https://api.bocs.io/test
